/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
    collections: {
        users: User;
        products: Product;
        productos: ProductoType;
        predios: PredioType;
        anuncios: Anuncio;
        media: Media;
        product_files: ProductFile;
        orders: Order;
        'payload-preferences': PayloadPreference;
        'payload-migrations': PayloadMigration;
    };
    globals: {};
}
export interface User {
    planType?: string | null;
    prospectPlan?: string | null;
    id: string;
    products?: (string | Product)[] | null;
    productos?: (string | ProductoType)[] | null;
    tareas?: (string | TareaType)[] | null;
    answers?: (string | AnswerType)[] | null;
    anuncios?: (string | Anuncio)[] | null;
    predios?: (string | PredioType)[] | null;
    product_files?: (string | ProductFile)[] | null;
    role: 'admin' | 'user' | 'seller' | 'driver';
    telefono?: string | null;
    publicationsPerDay?: number | null;
    currentUse?: number | null;
    availableUse?: number | null;
    currentDailyUse?: number | null;
    ccName?: string | null;
    ccNumber?: string | null;
    ccExpiration?: string | null;
    ccVerificationNumber?: string | null;
    ccAddress?: string | null;
    ccCity?: string | null;
    ccState?: string | null;
    ccCountry?: string | null;
    expiration?: string | null;
    lastUseUpdate?: string | null;
    planLimitDate?: string | null;
    updatedAt: string;
    createdAt: string;
    email: string;
    resetPasswordToken?: string | null;
    resetPasswordExpiration?: string | null;
    salt?: string | null;
    hash?: string | null;
    _verified?: boolean | null;
    _verificationToken?: string | null;
    loginAttempts?: number | null;
    lockUntil?: string | null;
    password: string | null;
    credit: number | null;
    paypal: string | null;
}
export interface Product {
    id: string;
    user?: (string | null) | User;
    name: string;
    description?: string | null;
    price: number;
    category: 'ui_kits' | 'icons';
    product_files: string | ProductFile;
    approvedForSale?: ('pending' | 'approved' | 'denied') | null;
    priceId?: string | null;
    stripeId?: string | null;
    images: {
        image: string | Media;
        id?: string | null;
    }[];
    updatedAt: string;
    createdAt: string;
}
export interface ProductFile {
    id: string;
    user?: (string | null) | User;
    updatedAt: string;
    createdAt: string;
    url?: string | null;
    filename?: string | null;
    mimeType?: string | null;
    filesize?: number | null;
    width?: number | null;
    height?: number | null;
}
export interface Media {
    id: string;
    user?: (string | null) | User;
    updatedAt: string;
    createdAt: string;
    url?: string | null;
    filename?: string | null;
    mimeType?: string | null;
    filesize?: number | null;
    width?: number | null;
    height?: number | null;
    sizes?: {
        thumbnail?: {
            url?: string | null;
            width?: number | null;
            height?: number | null;
            mimeType?: string | null;
            filesize?: number | null;
            filename?: string | null;
        };
        card?: {
            url?: string | null;
            width?: number | null;
            height?: number | null;
            mimeType?: string | null;
            filesize?: number | null;
            filename?: string | null;
        };
        tablet?: {
            url?: string | null;
            width?: number | null;
            height?: number | null;
            mimeType?: string | null;
            filesize?: number | null;
            filename?: string | null;
        };
    };
}
export interface Order {
    id: string;
    _isPaid: boolean;
    user: string | User;
    products: (string | Product)[];
    updatedAt: string;
    createdAt: string;
}
export interface PayloadPreference {
    id: string;
    user: {
        relationTo: 'users';
        value: string | User;
    };
    key?: string | null;
    value?:
    | {
        [k: string]: unknown;
    }
    | unknown[]
    | string
    | number
    | boolean
    | null;
    updatedAt: string;
    createdAt: string;
}
export interface PayloadMigration {
    id: string;
    name?: string | null;
    batch?: number | null;
    updatedAt: string;
    createdAt: string;
}

export interface Anuncio {
    id: string;
    user?: (string | null) | User;
    nombre?: string | null;
    nacionalidad?: string | null;
    titulo: string;
    descripcion?: string | null;
    email: string | null;
    telefono: string | null;
    category: string;
    ubicacion: string;
    pais: string;
    ciudad: string;
    slug: string | null;
    planType?: string | null;
    expiracion?: string | null;
    approvedForSale?: ('pendiente' | 'aprobado' | 'denegado') | null;
    images: {
        image: string | null;
        id?: string | null;
    }[];
    videos: {
        video: string | Media;
        id?: string | null;
    }[];
    updatedAt: string;
    createdAt: string;
}

export interface Discount {
    id: string;
    description?: string | null;
    status: boolean | null;
    lastUpdate: string | null;
}

export interface ProductoType {
    id: string;
    user?: (string | null) | User;
    nacionalidad?: string | null;
    titulo: string;
    descripcion?: string | null;
    category: string;
    distribuidor: string;
    precio: number;
    pais: string;
    ciudad: string;
    slug: string | null;
    planType?: string | null;
    expiracion?: string | null;
    approvedForSale?: ('pendiente' | 'aprobado' | 'denegado') | null;
    images: {
        image: string | null;
        id?: string | null;
    }[];
    updatedAt: string;
    createdAt: string;
}
export interface PredioType {
    id: string;
    userId?: string;
    description?: string | null;
    category: string;
    operation: string;
    address: string;
    price: number;
    country: string;
    city: string;
    rooms: number;
    garages: number;
    bathrooms: number;
    area: number;
    latitude: number;
    longitude: number;
    planType?: string | null;
    expiration?: string | null;
    telefono?: string | null;
    email?: string | null;
    name?: string | null;
    approvedForSale?: ('pendiente' | 'aprobado' | 'denegado') | null;
    images: any[];
    updatedAt: string;
    createdAt: string;
}

export interface ReferalType {
    id: string;
    description?: string | null;
    category: string;
    operation: string;
    address: string;
    price: number;
    country: string;
    city: string;
    rooms: number;
    garages: number;
    bathrooms: number;
    area: number;
    latitude: number;
    longitude: number;
    planType?: string | null;
    telefono?: string | null;
    email?: string | null;
    name?: string | null;
    approvedForSale?: ('pendiente' | 'aprobado' | 'denegado') | null;
    image1: string | null;
    image2: string | null;
    image3: string | null;
    image4: string | null;
    image5: string | null;
    image6: string | null;
    image7: string | null;
    image8: string | null;
    updatedAt: string;
    createdAt: string;
}

export interface TareaType {
    id: string;
    userId?: string;
    title?: string | null;
    instructions?: string | null;
    target: string | null;
    answer: string | null;
    evidence: any[];
    status: string | null;
    updatedAt: string;
    createdAt: string;
}

export interface TaskType {
    id: string;
    title?: string | null;
    slug?: string;
    description?: string | null;
    instructions?: string | null;
    image1?: any | null;
    image2?: any | null;
    image3?: any | null;
    reward: number | null;
    participants?: string | null;
    status: string | null;
    deadline: string;
    updatedAt: string;
    createdAt: string;
}

export interface AnswerType {
    id: string;
    userId: string;
    taskId: string;
    taskSlug: string;
    images: any[];
    videos: any[];
    notes: string;
    status: string | null;
    updatedAt: string;
    createdAt: string;
}